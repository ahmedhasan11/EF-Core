using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;

namespace DataBaseGenerated
{
    //here we wanna discuss the [DatabaseGenerated(parameters)] attribute
    //this attribute has 3 values that take in its parameters
    //1-DatabaseGeneratedOption.None
    //2-DatabaseGeneratedOption.Identity
    //3-DatabaseGeneratedOption.Computed

    //1-None:the value of a property will not be generated by the underlying database,
    //if you want to provide your own values to id properties instead of database generated values

    //2-Identity:specifies that the value of the property will be generated by the database on the INSERT statement
    //You can mark the non-key (non-id) properties as DB-generated properties 
    //identity property cant be updated

    //3-Compute: the same as identity  the diff is "and then, on each subsequent update"
    public class Course
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        //will not mark it as an IDENTITY column
        //each time you will have to provide the value of the CourseId
        //property before calling the SaveChanges() method
        public int CourseId { get; set; }
        public string CourseName { get; set; }
        public string Description { get; set; }

        public Teacher OnlineTeacher { get; set; }

        public Teacher ClassRoomTeacher { get; set; }
    }

    public class Teacher
    {
        public int TeacherId { get; set; }
        public string Name { get; set; }

        [InverseProperty("OnlineTeacher")]
        public ICollection<Course> OnlineCourses { get; set; }

        [InverseProperty("ClassRoomTeacher")]
        public ICollection<Course> ClassRoomCourses { get; set; }
    }

    public class Student
    {
        public int StudentID { get; set; }
        public string StudentName { get; set; }

        public DateTime? DateOfBirth { get; set; }

        public byte[] Photo { get; set; }

        public decimal Height { get; set; }

        public float Weight { get; set; }

        public Grade Grade { get; set; }
    }


    public class StudentContext : System.Data.Entity.DbContext
    {
        public StudentContext() : base("StudentDB")
        {
        }

        //making datasets for each entity
        public DbSet<Student> Students { get; set; }
        public DbSet<Grade> Grades { get; set; }
    }

    public class Grade
    {
        public int GradeId { get; set; }
        public string GradeName { get; set; }
        public string Section { get; set; }

        public ICollection<Student> Students { get; set; }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World!");
        }
    }
}